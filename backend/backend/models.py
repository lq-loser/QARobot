from django.db import models
from django.contrib import admin


class User(models.Model):
    userid = models.AutoField(primary_key=True)
    username = models.CharField(max_length=30)
    nickname = models.CharField(max_length=30)
    password = models.CharField(max_length=255)
    email = models.CharField(max_length=255)
    usertype = models.IntegerField(default=1)
    is_active = models.IntegerField(default=0)
    imagedata = models.CharField(max_length=4000000,
                                 default='')
    imagemime = models.CharField(max_length=20, default='image/jpeg')

    def __str__(self):
        return self.username


class EmailVerifyRecord(models.Model):
    # 验证码
    code = models.CharField(max_length=20, verbose_name=u"验证码")
    email = models.EmailField(max_length=50, verbose_name=u"邮箱")


class Developer(models.Model):
    devid = models.AutoField(primary_key=True)
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    APIcount = models.IntegerField(default=0)
    billings = models.FloatField(default=0)

    def __str__(self):
        return self.user.username


class API(models.Model):
    apiid = models.AutoField(primary_key=True)
    name = models.CharField(max_length=30)
    address = models.CharField(max_length=100, default="")
    description = models.CharField(max_length=1000)
    price = models.IntegerField(default=0)

    def __str__(self):
        return self.name


class APIorder(models.Model):
    orderid = models.AutoField(primary_key=True)
    api = models.ForeignKey(API, on_delete=models.CASCADE)
    dev = models.ForeignKey(Developer, on_delete=models.CASCADE)
    start_date = models.DateTimeField()
    count = models.IntegerField(default=0)
    end_date = models.DateTimeField()



class Record(models.Model):
    recordid = models.AutoField(primary_key=True)
    apiorder = models.ForeignKey(APIorder, on_delete=models.CASCADE,default=1)
    datetime = models.DateTimeField()
    content = models.CharField(max_length=1000)



admin.site.register(User)
admin.site.register(Developer)
admin.site.register(API)
admin.site.register(APIorder)
admin.site.register(EmailVerifyRecord)
admin.site.register(Record)

